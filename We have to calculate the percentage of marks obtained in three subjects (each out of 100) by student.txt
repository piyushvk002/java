import java.text.DecimalFormat;
// Abstract class representing Marks
abstract class Marks {
 abstract double getPercentage();
}
// Class representing Student A
class A extends Marks {
 private int subject1Marks;
 private int subject2Marks;
 private int subject3Marks;
 public A(int subject1Marks, int subject2Marks, int subject3Marks) {
 this.subject1Marks = subject1Marks;
 this.subject2Marks = subject2Marks;
 this.subject3Marks = subject3Marks;
 }
 @Override
 double getPercentage() {
 int totalMarks = subject1Marks + subject2Marks + subject3Marks;
 return (totalMarks / 3.0);
 }
}
// Class representing Student B
class B extends Marks {
 private int subject1Marks;
 private int subject2Marks;
 private int subject3Marks;
 private int subject4Marks;
 public B(int subject1Marks, int subject2Marks, int subject3Marks, int subject4Marks)
{
 this.subject1Marks = subject1Marks;
 this.subject2Marks = subject2Marks;
 this.subject3Marks = subject3Marks;
 this.subject4Marks = subject4Marks;
 }
 @Override
 double getPercentage() {
 int totalMarks = subject1Marks + subject2Marks + subject3Marks + subject4Marks;
 return (totalMarks / 4.0);
 }
}
public class Lab5 {
 public static void main(String[] args) {
 // Creating an object for Student A
 A studentA = new A(80, 90, 85);
 double percentageA = studentA.getPercentage();
 DecimalFormat decimalFormat = new DecimalFormat("#.##");
 System.out.println("Student A percentage: " + decimalFormat.format(percentageA)
+ "%");
 // Creating an object for Student B
 B studentB = new B(70, 75, 80, 85);
 double percentageB = studentB.getPercentage();
 System.out.println("Student B percentage: " + decimalFormat.format(percentageB)
+ "%");
 }
}